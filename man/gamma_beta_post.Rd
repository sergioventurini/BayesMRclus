% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jointpost.R
\name{gamma_beta_post}
\alias{gamma_beta_post}
\title{Function to implement the Metropolis algorithm for an arbitrary posterior probability distribution}
\usage{
gamma_beta_post(gamma, beta, data, prior, log = TRUE, verbose = TRUE)
}
\arguments{
\item{data}{Integer value specifying the total the number of iterations
of the algorithm.}

\item{prior}{A numeric value corresponding to the neighborhood where one looks
for a proposal value.}

\item{iter}{Integer value specifying the total the number of iterations
of the algorithm.}

\item{start}{A numeric vector providing the parameter starting values.}

\item{tune}{A numeric vector providing the Metropolis-Hastings tuning parameters.}

\item{proposal}{A length-one character vector with the name of the proposal
distribution; currently, accepted values are "unif" or "norm".}
}
\value{
A list with two components, \code{S} is a vector of the simulated draws,
and \code{accept_rate}, which gives the acceptance rate of the algorithm.
}
\description{
\code{metropolis()} implements a general Metropolis MCMC algorithm that can be applied to any
posterior probability provided by the user.
}
\examples{
data(bmi_sbp)

data <- bmi_sbp[, c("beta.exposure",
                    "beta.outcome",
                    "se.exposure",
                    "se.outcome")]

beta_z <- 0.3
beta_se_z <- 0.2
tau2_z <- 1e-3
hpar <- list(mu_gamma = mean(data[, 1]),
             sigma2_gamma = var(data[, 1])/nrow(data),
             mu_beta = beta_z,
             sigma2_beta = beta_se_z^2,
             psi2 = mean(data[, 3]^2),
             tau2 = tau2_z)

iter <- 1e4
start <- rnorm(2)
tune <- 1.5
res <- mcmc_bayesmr(data, hpar, iter, start, tune)
summary(res$draws)
res$accept_rate

}
\seealso{
\code{\link{TODO}()} for computing ...
}
\author{
Sergio Venturini \email{sergio.venturini@unicatt.it}
}
